version: '3'

services:
  
  broker-services:
    build:
      context: ./broker-service
      dockerfile: broker-service.dockerfile
    # restart: always
    ports:
      - "8080:80"
    # deploy:
    #   mode: relicated
    #   replicas: 1
  
  logger-services:
    build:
      context: ./logger-service
      dockerfile: logger-service.dockerfile
    # ports:
    #   - "8082:80"
    environment:
      - mongoUrl=mongodb://mongoDB:27017
    # deploy:
    #   mode: relicated
    #   replicas: 1
  
  authentication-services:
    build: 
      context: ./authentication-service
      dockerfile: authentication-service.dockerfile
    ports:
      - "8081:80"
    environment:
      - DSN=host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5
    # - DSN=host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connection_timeout=5
    # deploy:
    #   mode: relicated
    #   replicas: 1

  postgres:
    image: postgres:14.0-alpine
    ports:
      - "5432:5432"
      # restart: always
      # deploy:
      #   mode: relicated
      #   replicas: 1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=users
    # volumes:
    #   - ./db-data/postgres/:/var/lib/postgresql/data/
    volumes:
      - data:/var/lib/postgresql/data

  mongoDB:
    image: mongo:4.2.16-bionic
    ports:
      - "27017:27017"
    # restart: always
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    # volumes:
    #   - data:/data/db
    #   - data:/mongodb/data/db
# MONGO_INITDB_DATABASE: logs
      # MONGO_INITDB_ROOT_USERNAME: admin
      # MONGO_INITDB_ROOT_PASSWORD: secretmongo
      # environment:
  
  # SMTP server :1025
  # HTTP server :8025
  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

volumes:
  data:
    external: true